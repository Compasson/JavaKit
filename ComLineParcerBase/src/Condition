Упражнение 1 (Разбор параметров командной строки. Часть 2-Наследование)
- Создайте новый проект в среде «NetBeans».
- Скопируйте в проект, а именно в папку «src» в подкаталог с именем пакета файл - ComLineParserBase.java. Файл  находится в папке с лабораторной.
- В файле ComLineParserBase.java измените имя пакета, при необходимости.
Обратите внимание на сделанные изменения в этом коде: 
•	перечисление и часть методов  объявлена с модификатором доступа «protected». Почему?
•	метод «OnSwitch» просто возвращает код ошибки, т.к. его реализация будет в подклассе.
•	метод «OnUsage» состоит из пустого блока – каждый подкласс будет определять свой формат командной строки.
- Создайте новый public класс с именем «SimpleParser» в том же пакете.
- Сделайте его подклассом «ComLineParserBase».
- Объявите в классе две закрытых строковых переменных с именами «inFile» и «outFile» для хранения  имени входного и выходного файла.
- Создайте пару открытых методов для получение этих значений извне.
- Скопируйте метод «OnUsage» из суперкласса и снимите комментарий. В суперклассе закомментированный текст  удалите.
Добавьте директиву  «Override».
- С чем связана ошибка, на которую указывает среда разработки? Добавьте необходимый код. Какой аргумент вы передадите?
- Переопределите метод «OnSwitch», поставьте директиву «Override».
- В теле этого метода напишите: 
•	создайте переменную «status» и присвойте ей «SwitchStatus.NoError»
•	напишите оператор «switch» по параметру «key» 
•	для случая «?» установите «status» в значение «SwitchStatus.ShowUsage»
•	для случая «r» проверьте, что «keyValue» содержит значение, если да то положите его в «inFile», а при отсутствии значения выведите  сообщение
об ошибке и присвойте «status» значение «SwitchStatus.Error»
•	для случая «w» напишите аналогичный код, но для выходного файла
•	при необходимости на пишите раздел «default»
•	верните «status»
-В методе «main» создайте объект класса «SimpleParser» и вызовите на нём метод «Parse», передав ему в качестве аргумента командную строку.
-Распечатайте имена входного и выходного файлов.
-Исправьте ошибки, запустите программу.

Упражнение 2 (Улучшение кода)
- Продолжаем работать с тем же проектом.
- Потребовать от наследников «ComLineParserBase» написания своей версии метода «OnUsage».
- Запретить наследникам «ComLineParserBase» написания своей версии метода «Parse». 
-Исправьте ошибки, запустите программу.
